// generated by cdktf get
// terraform-aws-modules/vpc/aws
import { TerraformModule } from 'cdktf';
import { Construct } from 'constructs';
export interface TerraformAwsModulesVpcAwsOptions {
  /**
   * The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN.
   * @default 64512
   */
  readonly amazonSideAsn?: string;
  /**
   * Assign IPv6 address on subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch
   */
  readonly assignIpv6AddressOnCreation?: boolean;
  /**
   * A list of availability zones names or ids in the region
   * @default
   */
  readonly azs?: string[];
  /**
   * The CIDR block for the VPC. Default value is a valid CIDR, but not acceptable by AWS and should be overridden
   * @default 0.0.0.0/0
   */
  readonly cidr?: string;
  /**
   * Controls if an internet gateway route for public database access should be created
   */
  readonly createDatabaseInternetGatewayRoute?: boolean;
  /**
   * Controls if a nat gateway route should be created to give internet access to the database subnets
   */
  readonly createDatabaseNatGatewayRoute?: boolean;
  /**
   * Controls if database subnet group should be created (n.b. database_subnets must also be set)
   * @default true
   */
  readonly createDatabaseSubnetGroup?: boolean;
  /**
   * Controls if separate route table for database should be created
   */
  readonly createDatabaseSubnetRouteTable?: boolean;
  /**
   * Controls if an Egress Only Internet Gateway is created and its related routes.
   * @default true
   */
  readonly createEgressOnlyIgw?: boolean;
  /**
   * Controls if elasticache subnet group should be created
   * @default true
   */
  readonly createElasticacheSubnetGroup?: boolean;
  /**
   * Controls if separate route table for elasticache should be created
   */
  readonly createElasticacheSubnetRouteTable?: boolean;
  /**
   * Whether to create IAM role for VPC Flow Logs
   */
  readonly createFlowLogCloudwatchIamRole?: boolean;
  /**
   * Whether to create CloudWatch log group for VPC Flow Logs
   */
  readonly createFlowLogCloudwatchLogGroup?: boolean;
  /**
   * Controls if an Internet Gateway is created for public subnets and the related routes that connect them.
   * @default true
   */
  readonly createIgw?: boolean;
  /**
   * Controls if redshift subnet group should be created
   * @default true
   */
  readonly createRedshiftSubnetGroup?: boolean;
  /**
   * Controls if separate route table for redshift should be created
   */
  readonly createRedshiftSubnetRouteTable?: boolean;
  /**
   * Controls if VPC should be created (it affects almost all resources)
   * @default true
   */
  readonly createVpc?: boolean;
  /**
   * Additional tags for the Customer Gateway
   * @default [object Object]
   */
  readonly customerGatewayTags?: { [key: string]: string };
  /**
   * Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)
   * @default [object Object]
   */
  readonly customerGateways?: { [key: string]: { [key: string]: any } };
  /**
   * Additional tags for the database subnets network ACL
   * @default [object Object]
   */
  readonly databaseAclTags?: { [key: string]: string };
  /**
   * Whether to use dedicated network ACL (not default) and custom rules for database subnets
   */
  readonly databaseDedicatedNetworkAcl?: boolean;
  /**
   * Database subnets inbound network ACL rules
   * @default [object Object]
   */
  readonly databaseInboundAclRules?: { [key: string]: string }[];
  /**
   * Database subnets outbound network ACL rules
   * @default [object Object]
   */
  readonly databaseOutboundAclRules?: { [key: string]: string }[];
  /**
   * Additional tags for the database route tables
   * @default [object Object]
   */
  readonly databaseRouteTableTags?: { [key: string]: string };
  /**
   * Assign IPv6 address on database subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch
   */
  readonly databaseSubnetAssignIpv6AddressOnCreation?: boolean;
  /**
   * Name of database subnet group
   */
  readonly databaseSubnetGroupName?: string;
  /**
   * Additional tags for the database subnet group
   * @default [object Object]
   */
  readonly databaseSubnetGroupTags?: { [key: string]: string };
  /**
   * Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
   * @default
   */
  readonly databaseSubnetIpv6Prefixes?: string[];
  /**
   * Suffix to append to database subnets name
   * @default db
   */
  readonly databaseSubnetSuffix?: string;
  /**
   * Additional tags for the database subnets
   * @default [object Object]
   */
  readonly databaseSubnetTags?: { [key: string]: string };
  /**
   * A list of database subnets
   * @default
   */
  readonly databaseSubnets?: string[];
  /**
   * List of maps of egress rules to set on the Default Network ACL
   * @default [object Object],[object Object]
   */
  readonly defaultNetworkAclEgress?: { [key: string]: string }[];
  /**
   * List of maps of ingress rules to set on the Default Network ACL
   * @default [object Object],[object Object]
   */
  readonly defaultNetworkAclIngress?: { [key: string]: string }[];
  /**
   * Name to be used on the Default Network ACL
   */
  readonly defaultNetworkAclName?: string;
  /**
   * Additional tags for the Default Network ACL
   * @default [object Object]
   */
  readonly defaultNetworkAclTags?: { [key: string]: string };
  /**
   * List of virtual gateways for propagation
   * @default
   */
  readonly defaultRouteTablePropagatingVgws?: string[];
  /**
   * Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route
   * @default
   */
  readonly defaultRouteTableRoutes?: { [key: string]: string }[];
  /**
   * Additional tags for the default route table
   * @default [object Object]
   */
  readonly defaultRouteTableTags?: { [key: string]: string };
  /**
   * List of maps of egress rules to set on the default security group
   */
  readonly defaultSecurityGroupEgress?: { [key: string]: string }[];
  /**
   * List of maps of ingress rules to set on the default security group
   */
  readonly defaultSecurityGroupIngress?: { [key: string]: string }[];
  /**
   * Name to be used on the default security group
   * @default default
   */
  readonly defaultSecurityGroupName?: string;
  /**
   * Additional tags for the default security group
   * @default [object Object]
   */
  readonly defaultSecurityGroupTags?: { [key: string]: string };
  /**
   * Should be true to enable ClassicLink in the Default VPC
   */
  readonly defaultVpcEnableClassiclink?: boolean;
  /**
   * Should be true to enable DNS hostnames in the Default VPC
   */
  readonly defaultVpcEnableDnsHostnames?: boolean;
  /**
   * Should be true to enable DNS support in the Default VPC
   * @default true
   */
  readonly defaultVpcEnableDnsSupport?: boolean;
  /**
   * Name to be used on the Default VPC
   */
  readonly defaultVpcName?: string;
  /**
   * Additional tags for the Default VPC
   * @default [object Object]
   */
  readonly defaultVpcTags?: { [key: string]: string };
  /**
   * Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)
   */
  readonly dhcpOptionsDomainName?: string;
  /**
   * Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)
   * @default AmazonProvidedDNS
   */
  readonly dhcpOptionsDomainNameServers?: string[];
  /**
   * Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)
   * @default
   */
  readonly dhcpOptionsNetbiosNameServers?: string[];
  /**
   * Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)
   */
  readonly dhcpOptionsNetbiosNodeType?: string;
  /**
   * Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)
   * @default
   */
  readonly dhcpOptionsNtpServers?: string[];
  /**
   * Additional tags for the DHCP option set (requires enable_dhcp_options set to true)
   * @default [object Object]
   */
  readonly dhcpOptionsTags?: { [key: string]: string };
  /**
   * Additional tags for the elasticache subnets network ACL
   * @default [object Object]
   */
  readonly elasticacheAclTags?: { [key: string]: string };
  /**
   * Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets
   */
  readonly elasticacheDedicatedNetworkAcl?: boolean;
  /**
   * Elasticache subnets inbound network ACL rules
   * @default [object Object]
   */
  readonly elasticacheInboundAclRules?: { [key: string]: string }[];
  /**
   * Elasticache subnets outbound network ACL rules
   * @default [object Object]
   */
  readonly elasticacheOutboundAclRules?: { [key: string]: string }[];
  /**
   * Additional tags for the elasticache route tables
   * @default [object Object]
   */
  readonly elasticacheRouteTableTags?: { [key: string]: string };
  /**
   * Assign IPv6 address on elasticache subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch
   */
  readonly elasticacheSubnetAssignIpv6AddressOnCreation?: boolean;
  /**
   * Name of elasticache subnet group
   */
  readonly elasticacheSubnetGroupName?: string;
  /**
   * Additional tags for the elasticache subnet group
   * @default [object Object]
   */
  readonly elasticacheSubnetGroupTags?: { [key: string]: string };
  /**
   * Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
   * @default
   */
  readonly elasticacheSubnetIpv6Prefixes?: string[];
  /**
   * Suffix to append to elasticache subnets name
   * @default elasticache
   */
  readonly elasticacheSubnetSuffix?: string;
  /**
   * Additional tags for the elasticache subnets
   * @default [object Object]
   */
  readonly elasticacheSubnetTags?: { [key: string]: string };
  /**
   * A list of elasticache subnets
   * @default
   */
  readonly elasticacheSubnets?: string[];
  /**
   * Should be true to enable ClassicLink for the VPC. Only valid in regions and accounts that support EC2 Classic.
   */
  readonly enableClassiclink?: boolean;
  /**
   * Should be true to enable ClassicLink DNS Support for the VPC. Only valid in regions and accounts that support EC2 Classic.
   */
  readonly enableClassiclinkDnsSupport?: boolean;
  /**
   * Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type
   */
  readonly enableDhcpOptions?: boolean;
  /**
   * Should be true to enable DNS hostnames in the VPC
   */
  readonly enableDnsHostnames?: boolean;
  /**
   * Should be true to enable DNS support in the VPC
   * @default true
   */
  readonly enableDnsSupport?: boolean;
  /**
   * Whether or not to enable VPC Flow Logs
   */
  readonly enableFlowLog?: boolean;
  /**
   * Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block.
   */
  readonly enableIpv6?: boolean;
  /**
   * Should be true if you want to provision NAT Gateways for each of your private networks
   */
  readonly enableNatGateway?: boolean;
  /**
   * Controls if redshift should have public routing table
   */
  readonly enablePublicRedshift?: boolean;
  /**
   * Should be true if you want to create a new VPN Gateway resource and attach it to the VPC
   */
  readonly enableVpnGateway?: boolean;
  /**
   * List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)
   * @default
   */
  readonly externalNatIpIds?: string[];
  /**
   * List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)
   * @default
   */
  readonly externalNatIps?: string[];
  /**
   * The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided.
   */
  readonly flowLogCloudwatchIamRoleArn?: string;
  /**
   * The ARN of the KMS Key to use when encrypting log data for VPC flow logs.
   */
  readonly flowLogCloudwatchLogGroupKmsKeyId?: string;
  /**
   * Specifies the name prefix of CloudWatch Log Group for VPC flow logs.
   * @default /aws/vpc-flow-log/
   */
  readonly flowLogCloudwatchLogGroupNamePrefix?: string;
  /**
   * Specifies the number of days you want to retain log events in the specified log group for VPC flow logs.
   */
  readonly flowLogCloudwatchLogGroupRetentionInDays?: number;
  /**
   * The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided.
   */
  readonly flowLogDestinationArn?: string;
  /**
   * Type of flow log destination. Can be s3 or cloud-watch-logs.
   * @default cloud-watch-logs
   */
  readonly flowLogDestinationType?: string;
  /**
   * The fields to include in the flow log record, in the order in which they should appear.
   */
  readonly flowLogLogFormat?: string;
  /**
   * The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds.
   * @default 600
   */
  readonly flowLogMaxAggregationInterval?: number;
  /**
   * The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL.
   * @default ALL
   */
  readonly flowLogTrafficType?: string;
  /**
   * Additional tags for the internet gateway
   * @default [object Object]
   */
  readonly igwTags?: { [key: string]: string };
  /**
   * A tenancy option for instances launched into the VPC
   * @default default
   */
  readonly instanceTenancy?: string;
  /**
   * Additional tags for the intra subnets network ACL
   * @default [object Object]
   */
  readonly intraAclTags?: { [key: string]: string };
  /**
   * Whether to use dedicated network ACL (not default) and custom rules for intra subnets
   */
  readonly intraDedicatedNetworkAcl?: boolean;
  /**
   * Intra subnets inbound network ACLs
   * @default [object Object]
   */
  readonly intraInboundAclRules?: { [key: string]: string }[];
  /**
   * Intra subnets outbound network ACLs
   * @default [object Object]
   */
  readonly intraOutboundAclRules?: { [key: string]: string }[];
  /**
   * Additional tags for the intra route tables
   * @default [object Object]
   */
  readonly intraRouteTableTags?: { [key: string]: string };
  /**
   * Assign IPv6 address on intra subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch
   */
  readonly intraSubnetAssignIpv6AddressOnCreation?: boolean;
  /**
   * Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
   * @default
   */
  readonly intraSubnetIpv6Prefixes?: string[];
  /**
   * Suffix to append to intra subnets name
   * @default intra
   */
  readonly intraSubnetSuffix?: string;
  /**
   * Additional tags for the intra subnets
   * @default [object Object]
   */
  readonly intraSubnetTags?: { [key: string]: string };
  /**
   * A list of intra subnets
   * @default
   */
  readonly intraSubnets?: string[];
  /**
   * Should be true to adopt and manage Default Network ACL
   */
  readonly manageDefaultNetworkAcl?: boolean;
  /**
   * Should be true to manage default route table
   */
  readonly manageDefaultRouteTable?: boolean;
  /**
   * Should be true to adopt and manage default security group
   */
  readonly manageDefaultSecurityGroup?: boolean;
  /**
   * Should be true to adopt and manage Default VPC
   */
  readonly manageDefaultVpc?: boolean;
  /**
   * Should be false if you do not want to auto-assign public IP on launch
   * @default true
   */
  readonly mapPublicIpOnLaunch?: boolean;
  /**
   * Name to be used on all the resources as identifier
   */
  readonly name?: string;
  /**
   * Additional tags for the NAT EIP
   * @default [object Object]
   */
  readonly natEipTags?: { [key: string]: string };
  /**
   * Additional tags for the NAT gateways
   * @default [object Object]
   */
  readonly natGatewayTags?: { [key: string]: string };
  /**
   * Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`.
   */
  readonly oneNatGatewayPerAz?: boolean;
  /**
   * Additional tags for the outpost subnets network ACL
   * @default [object Object]
   */
  readonly outpostAclTags?: { [key: string]: string };
  /**
   * ARN of Outpost you want to create a subnet in.
   */
  readonly outpostArn?: string;
  /**
   * AZ where Outpost is anchored.
   */
  readonly outpostAz?: string;
  /**
   * Whether to use dedicated network ACL (not default) and custom rules for outpost subnets
   */
  readonly outpostDedicatedNetworkAcl?: boolean;
  /**
   * Outpost subnets inbound network ACLs
   * @default [object Object]
   */
  readonly outpostInboundAclRules?: { [key: string]: string }[];
  /**
   * Outpost subnets outbound network ACLs
   * @default [object Object]
   */
  readonly outpostOutboundAclRules?: { [key: string]: string }[];
  /**
   * Assign IPv6 address on outpost subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch
   */
  readonly outpostSubnetAssignIpv6AddressOnCreation?: boolean;
  /**
   * Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
   * @default
   */
  readonly outpostSubnetIpv6Prefixes?: string[];
  /**
   * Suffix to append to outpost subnets name
   * @default outpost
   */
  readonly outpostSubnetSuffix?: string;
  /**
   * Additional tags for the outpost subnets
   * @default [object Object]
   */
  readonly outpostSubnetTags?: { [key: string]: string };
  /**
   * A list of outpost subnets inside the VPC
   * @default
   */
  readonly outpostSubnets?: string[];
  /**
   * Additional tags for the private subnets network ACL
   * @default [object Object]
   */
  readonly privateAclTags?: { [key: string]: string };
  /**
   * Whether to use dedicated network ACL (not default) and custom rules for private subnets
   */
  readonly privateDedicatedNetworkAcl?: boolean;
  /**
   * Private subnets inbound network ACLs
   * @default [object Object]
   */
  readonly privateInboundAclRules?: { [key: string]: string }[];
  /**
   * Private subnets outbound network ACLs
   * @default [object Object]
   */
  readonly privateOutboundAclRules?: { [key: string]: string }[];
  /**
   * Additional tags for the private route tables
   * @default [object Object]
   */
  readonly privateRouteTableTags?: { [key: string]: string };
  /**
   * Assign IPv6 address on private subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch
   */
  readonly privateSubnetAssignIpv6AddressOnCreation?: boolean;
  /**
   * Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
   * @default
   */
  readonly privateSubnetIpv6Prefixes?: string[];
  /**
   * Suffix to append to private subnets name
   * @default private
   */
  readonly privateSubnetSuffix?: string;
  /**
   * Additional tags for the private subnets
   * @default [object Object]
   */
  readonly privateSubnetTags?: { [key: string]: string };
  /**
   * A list of private subnets inside the VPC
   * @default
   */
  readonly privateSubnets?: string[];
  /**
   * Should be true if you want route table propagation
   */
  readonly propagateIntraRouteTablesVgw?: boolean;
  /**
   * Should be true if you want route table propagation
   */
  readonly propagatePrivateRouteTablesVgw?: boolean;
  /**
   * Should be true if you want route table propagation
   */
  readonly propagatePublicRouteTablesVgw?: boolean;
  /**
   * Additional tags for the public subnets network ACL
   * @default [object Object]
   */
  readonly publicAclTags?: { [key: string]: string };
  /**
   * Whether to use dedicated network ACL (not default) and custom rules for public subnets
   */
  readonly publicDedicatedNetworkAcl?: boolean;
  /**
   * Public subnets inbound network ACLs
   * @default [object Object]
   */
  readonly publicInboundAclRules?: { [key: string]: string }[];
  /**
   * Public subnets outbound network ACLs
   * @default [object Object]
   */
  readonly publicOutboundAclRules?: { [key: string]: string }[];
  /**
   * Additional tags for the public route tables
   * @default [object Object]
   */
  readonly publicRouteTableTags?: { [key: string]: string };
  /**
   * Assign IPv6 address on public subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch
   */
  readonly publicSubnetAssignIpv6AddressOnCreation?: boolean;
  /**
   * Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
   * @default
   */
  readonly publicSubnetIpv6Prefixes?: string[];
  /**
   * Suffix to append to public subnets name
   * @default public
   */
  readonly publicSubnetSuffix?: string;
  /**
   * Additional tags for the public subnets
   * @default [object Object]
   */
  readonly publicSubnetTags?: { [key: string]: string };
  /**
   * A list of public subnets inside the VPC
   * @default
   */
  readonly publicSubnets?: string[];
  /**
   * Additional tags for the redshift subnets network ACL
   * @default [object Object]
   */
  readonly redshiftAclTags?: { [key: string]: string };
  /**
   * Whether to use dedicated network ACL (not default) and custom rules for redshift subnets
   */
  readonly redshiftDedicatedNetworkAcl?: boolean;
  /**
   * Redshift subnets inbound network ACL rules
   * @default [object Object]
   */
  readonly redshiftInboundAclRules?: { [key: string]: string }[];
  /**
   * Redshift subnets outbound network ACL rules
   * @default [object Object]
   */
  readonly redshiftOutboundAclRules?: { [key: string]: string }[];
  /**
   * Additional tags for the redshift route tables
   * @default [object Object]
   */
  readonly redshiftRouteTableTags?: { [key: string]: string };
  /**
   * Assign IPv6 address on redshift subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch
   */
  readonly redshiftSubnetAssignIpv6AddressOnCreation?: boolean;
  /**
   * Name of redshift subnet group
   */
  readonly redshiftSubnetGroupName?: string;
  /**
   * Additional tags for the redshift subnet group
   * @default [object Object]
   */
  readonly redshiftSubnetGroupTags?: { [key: string]: string };
  /**
   * Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
   * @default
   */
  readonly redshiftSubnetIpv6Prefixes?: string[];
  /**
   * Suffix to append to redshift subnets name
   * @default redshift
   */
  readonly redshiftSubnetSuffix?: string;
  /**
   * Additional tags for the redshift subnets
   * @default [object Object]
   */
  readonly redshiftSubnetTags?: { [key: string]: string };
  /**
   * A list of redshift subnets
   * @default
   */
  readonly redshiftSubnets?: string[];
  /**
   * Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable
   */
  readonly reuseNatIps?: boolean;
  /**
   * List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool
   * @default
   */
  readonly secondaryCidrBlocks?: string[];
  /**
   * Should be true if you want to provision a single shared NAT Gateway across all of your private networks
   */
  readonly singleNatGateway?: boolean;
  /**
   * A map of tags to add to all resources
   * @default [object Object]
   */
  readonly tags?: { [key: string]: string };
  /**
   * The ARN of the Permissions Boundary for the VPC Flow Log IAM Role
   */
  readonly vpcFlowLogPermissionsBoundary?: string;
  /**
   * Additional tags for the VPC Flow Logs
   * @default [object Object]
   */
  readonly vpcFlowLogTags?: { [key: string]: string };
  /**
   * Additional tags for the VPC
   * @default [object Object]
   */
  readonly vpcTags?: { [key: string]: string };
  /**
   * The Availability Zone for the VPN Gateway
   */
  readonly vpnGatewayAz?: string;
  /**
   * ID of VPN Gateway to attach to the VPC
   */
  readonly vpnGatewayId?: string;
  /**
   * Additional tags for the VPN gateway
   * @default [object Object]
   */
  readonly vpnGatewayTags?: { [key: string]: string };
}
export class TerraformAwsModulesVpcAws extends TerraformModule {
  private readonly inputs: { [name: string]: any } = { }
  public constructor(scope: Construct, id: string, options: TerraformAwsModulesVpcAwsOptions = {}) {
    super(scope, id, {
      source: 'terraform-aws-modules/vpc/aws',
    });
    this.amazonSideAsn = options.amazonSideAsn;
    this.assignIpv6AddressOnCreation = options.assignIpv6AddressOnCreation;
    this.azs = options.azs;
    this.cidr = options.cidr;
    this.createDatabaseInternetGatewayRoute = options.createDatabaseInternetGatewayRoute;
    this.createDatabaseNatGatewayRoute = options.createDatabaseNatGatewayRoute;
    this.createDatabaseSubnetGroup = options.createDatabaseSubnetGroup;
    this.createDatabaseSubnetRouteTable = options.createDatabaseSubnetRouteTable;
    this.createEgressOnlyIgw = options.createEgressOnlyIgw;
    this.createElasticacheSubnetGroup = options.createElasticacheSubnetGroup;
    this.createElasticacheSubnetRouteTable = options.createElasticacheSubnetRouteTable;
    this.createFlowLogCloudwatchIamRole = options.createFlowLogCloudwatchIamRole;
    this.createFlowLogCloudwatchLogGroup = options.createFlowLogCloudwatchLogGroup;
    this.createIgw = options.createIgw;
    this.createRedshiftSubnetGroup = options.createRedshiftSubnetGroup;
    this.createRedshiftSubnetRouteTable = options.createRedshiftSubnetRouteTable;
    this.createVpc = options.createVpc;
    this.customerGatewayTags = options.customerGatewayTags;
    this.customerGateways = options.customerGateways;
    this.databaseAclTags = options.databaseAclTags;
    this.databaseDedicatedNetworkAcl = options.databaseDedicatedNetworkAcl;
    this.databaseInboundAclRules = options.databaseInboundAclRules;
    this.databaseOutboundAclRules = options.databaseOutboundAclRules;
    this.databaseRouteTableTags = options.databaseRouteTableTags;
    this.databaseSubnetAssignIpv6AddressOnCreation = options.databaseSubnetAssignIpv6AddressOnCreation;
    this.databaseSubnetGroupName = options.databaseSubnetGroupName;
    this.databaseSubnetGroupTags = options.databaseSubnetGroupTags;
    this.databaseSubnetIpv6Prefixes = options.databaseSubnetIpv6Prefixes;
    this.databaseSubnetSuffix = options.databaseSubnetSuffix;
    this.databaseSubnetTags = options.databaseSubnetTags;
    this.databaseSubnets = options.databaseSubnets;
    this.defaultNetworkAclEgress = options.defaultNetworkAclEgress;
    this.defaultNetworkAclIngress = options.defaultNetworkAclIngress;
    this.defaultNetworkAclName = options.defaultNetworkAclName;
    this.defaultNetworkAclTags = options.defaultNetworkAclTags;
    this.defaultRouteTablePropagatingVgws = options.defaultRouteTablePropagatingVgws;
    this.defaultRouteTableRoutes = options.defaultRouteTableRoutes;
    this.defaultRouteTableTags = options.defaultRouteTableTags;
    this.defaultSecurityGroupEgress = options.defaultSecurityGroupEgress;
    this.defaultSecurityGroupIngress = options.defaultSecurityGroupIngress;
    this.defaultSecurityGroupName = options.defaultSecurityGroupName;
    this.defaultSecurityGroupTags = options.defaultSecurityGroupTags;
    this.defaultVpcEnableClassiclink = options.defaultVpcEnableClassiclink;
    this.defaultVpcEnableDnsHostnames = options.defaultVpcEnableDnsHostnames;
    this.defaultVpcEnableDnsSupport = options.defaultVpcEnableDnsSupport;
    this.defaultVpcName = options.defaultVpcName;
    this.defaultVpcTags = options.defaultVpcTags;
    this.dhcpOptionsDomainName = options.dhcpOptionsDomainName;
    this.dhcpOptionsDomainNameServers = options.dhcpOptionsDomainNameServers;
    this.dhcpOptionsNetbiosNameServers = options.dhcpOptionsNetbiosNameServers;
    this.dhcpOptionsNetbiosNodeType = options.dhcpOptionsNetbiosNodeType;
    this.dhcpOptionsNtpServers = options.dhcpOptionsNtpServers;
    this.dhcpOptionsTags = options.dhcpOptionsTags;
    this.elasticacheAclTags = options.elasticacheAclTags;
    this.elasticacheDedicatedNetworkAcl = options.elasticacheDedicatedNetworkAcl;
    this.elasticacheInboundAclRules = options.elasticacheInboundAclRules;
    this.elasticacheOutboundAclRules = options.elasticacheOutboundAclRules;
    this.elasticacheRouteTableTags = options.elasticacheRouteTableTags;
    this.elasticacheSubnetAssignIpv6AddressOnCreation = options.elasticacheSubnetAssignIpv6AddressOnCreation;
    this.elasticacheSubnetGroupName = options.elasticacheSubnetGroupName;
    this.elasticacheSubnetGroupTags = options.elasticacheSubnetGroupTags;
    this.elasticacheSubnetIpv6Prefixes = options.elasticacheSubnetIpv6Prefixes;
    this.elasticacheSubnetSuffix = options.elasticacheSubnetSuffix;
    this.elasticacheSubnetTags = options.elasticacheSubnetTags;
    this.elasticacheSubnets = options.elasticacheSubnets;
    this.enableClassiclink = options.enableClassiclink;
    this.enableClassiclinkDnsSupport = options.enableClassiclinkDnsSupport;
    this.enableDhcpOptions = options.enableDhcpOptions;
    this.enableDnsHostnames = options.enableDnsHostnames;
    this.enableDnsSupport = options.enableDnsSupport;
    this.enableFlowLog = options.enableFlowLog;
    this.enableIpv6 = options.enableIpv6;
    this.enableNatGateway = options.enableNatGateway;
    this.enablePublicRedshift = options.enablePublicRedshift;
    this.enableVpnGateway = options.enableVpnGateway;
    this.externalNatIpIds = options.externalNatIpIds;
    this.externalNatIps = options.externalNatIps;
    this.flowLogCloudwatchIamRoleArn = options.flowLogCloudwatchIamRoleArn;
    this.flowLogCloudwatchLogGroupKmsKeyId = options.flowLogCloudwatchLogGroupKmsKeyId;
    this.flowLogCloudwatchLogGroupNamePrefix = options.flowLogCloudwatchLogGroupNamePrefix;
    this.flowLogCloudwatchLogGroupRetentionInDays = options.flowLogCloudwatchLogGroupRetentionInDays;
    this.flowLogDestinationArn = options.flowLogDestinationArn;
    this.flowLogDestinationType = options.flowLogDestinationType;
    this.flowLogLogFormat = options.flowLogLogFormat;
    this.flowLogMaxAggregationInterval = options.flowLogMaxAggregationInterval;
    this.flowLogTrafficType = options.flowLogTrafficType;
    this.igwTags = options.igwTags;
    this.instanceTenancy = options.instanceTenancy;
    this.intraAclTags = options.intraAclTags;
    this.intraDedicatedNetworkAcl = options.intraDedicatedNetworkAcl;
    this.intraInboundAclRules = options.intraInboundAclRules;
    this.intraOutboundAclRules = options.intraOutboundAclRules;
    this.intraRouteTableTags = options.intraRouteTableTags;
    this.intraSubnetAssignIpv6AddressOnCreation = options.intraSubnetAssignIpv6AddressOnCreation;
    this.intraSubnetIpv6Prefixes = options.intraSubnetIpv6Prefixes;
    this.intraSubnetSuffix = options.intraSubnetSuffix;
    this.intraSubnetTags = options.intraSubnetTags;
    this.intraSubnets = options.intraSubnets;
    this.manageDefaultNetworkAcl = options.manageDefaultNetworkAcl;
    this.manageDefaultRouteTable = options.manageDefaultRouteTable;
    this.manageDefaultSecurityGroup = options.manageDefaultSecurityGroup;
    this.manageDefaultVpc = options.manageDefaultVpc;
    this.mapPublicIpOnLaunch = options.mapPublicIpOnLaunch;
    this.name = options.name;
    this.natEipTags = options.natEipTags;
    this.natGatewayTags = options.natGatewayTags;
    this.oneNatGatewayPerAz = options.oneNatGatewayPerAz;
    this.outpostAclTags = options.outpostAclTags;
    this.outpostArn = options.outpostArn;
    this.outpostAz = options.outpostAz;
    this.outpostDedicatedNetworkAcl = options.outpostDedicatedNetworkAcl;
    this.outpostInboundAclRules = options.outpostInboundAclRules;
    this.outpostOutboundAclRules = options.outpostOutboundAclRules;
    this.outpostSubnetAssignIpv6AddressOnCreation = options.outpostSubnetAssignIpv6AddressOnCreation;
    this.outpostSubnetIpv6Prefixes = options.outpostSubnetIpv6Prefixes;
    this.outpostSubnetSuffix = options.outpostSubnetSuffix;
    this.outpostSubnetTags = options.outpostSubnetTags;
    this.outpostSubnets = options.outpostSubnets;
    this.privateAclTags = options.privateAclTags;
    this.privateDedicatedNetworkAcl = options.privateDedicatedNetworkAcl;
    this.privateInboundAclRules = options.privateInboundAclRules;
    this.privateOutboundAclRules = options.privateOutboundAclRules;
    this.privateRouteTableTags = options.privateRouteTableTags;
    this.privateSubnetAssignIpv6AddressOnCreation = options.privateSubnetAssignIpv6AddressOnCreation;
    this.privateSubnetIpv6Prefixes = options.privateSubnetIpv6Prefixes;
    this.privateSubnetSuffix = options.privateSubnetSuffix;
    this.privateSubnetTags = options.privateSubnetTags;
    this.privateSubnets = options.privateSubnets;
    this.propagateIntraRouteTablesVgw = options.propagateIntraRouteTablesVgw;
    this.propagatePrivateRouteTablesVgw = options.propagatePrivateRouteTablesVgw;
    this.propagatePublicRouteTablesVgw = options.propagatePublicRouteTablesVgw;
    this.publicAclTags = options.publicAclTags;
    this.publicDedicatedNetworkAcl = options.publicDedicatedNetworkAcl;
    this.publicInboundAclRules = options.publicInboundAclRules;
    this.publicOutboundAclRules = options.publicOutboundAclRules;
    this.publicRouteTableTags = options.publicRouteTableTags;
    this.publicSubnetAssignIpv6AddressOnCreation = options.publicSubnetAssignIpv6AddressOnCreation;
    this.publicSubnetIpv6Prefixes = options.publicSubnetIpv6Prefixes;
    this.publicSubnetSuffix = options.publicSubnetSuffix;
    this.publicSubnetTags = options.publicSubnetTags;
    this.publicSubnets = options.publicSubnets;
    this.redshiftAclTags = options.redshiftAclTags;
    this.redshiftDedicatedNetworkAcl = options.redshiftDedicatedNetworkAcl;
    this.redshiftInboundAclRules = options.redshiftInboundAclRules;
    this.redshiftOutboundAclRules = options.redshiftOutboundAclRules;
    this.redshiftRouteTableTags = options.redshiftRouteTableTags;
    this.redshiftSubnetAssignIpv6AddressOnCreation = options.redshiftSubnetAssignIpv6AddressOnCreation;
    this.redshiftSubnetGroupName = options.redshiftSubnetGroupName;
    this.redshiftSubnetGroupTags = options.redshiftSubnetGroupTags;
    this.redshiftSubnetIpv6Prefixes = options.redshiftSubnetIpv6Prefixes;
    this.redshiftSubnetSuffix = options.redshiftSubnetSuffix;
    this.redshiftSubnetTags = options.redshiftSubnetTags;
    this.redshiftSubnets = options.redshiftSubnets;
    this.reuseNatIps = options.reuseNatIps;
    this.secondaryCidrBlocks = options.secondaryCidrBlocks;
    this.singleNatGateway = options.singleNatGateway;
    this.tags = options.tags;
    this.vpcFlowLogPermissionsBoundary = options.vpcFlowLogPermissionsBoundary;
    this.vpcFlowLogTags = options.vpcFlowLogTags;
    this.vpcTags = options.vpcTags;
    this.vpnGatewayAz = options.vpnGatewayAz;
    this.vpnGatewayId = options.vpnGatewayId;
    this.vpnGatewayTags = options.vpnGatewayTags;
  }
  public get amazonSideAsn(): string | undefined {
    return this.inputs.amazon_side_asn as string | undefined;
  }
  public set amazonSideAsn(value: string | undefined) {
    this.inputs.amazon_side_asn = value;
  }
  public get assignIpv6AddressOnCreation(): boolean | undefined {
    return this.inputs.assign_ipv6_address_on_creation as boolean | undefined;
  }
  public set assignIpv6AddressOnCreation(value: boolean | undefined) {
    this.inputs.assign_ipv6_address_on_creation = value;
  }
  public get azs(): string[] | undefined {
    return this.inputs.azs as string[] | undefined;
  }
  public set azs(value: string[] | undefined) {
    this.inputs.azs = value;
  }
  public get cidr(): string | undefined {
    return this.inputs.cidr as string | undefined;
  }
  public set cidr(value: string | undefined) {
    this.inputs.cidr = value;
  }
  public get createDatabaseInternetGatewayRoute(): boolean | undefined {
    return this.inputs.create_database_internet_gateway_route as boolean | undefined;
  }
  public set createDatabaseInternetGatewayRoute(value: boolean | undefined) {
    this.inputs.create_database_internet_gateway_route = value;
  }
  public get createDatabaseNatGatewayRoute(): boolean | undefined {
    return this.inputs.create_database_nat_gateway_route as boolean | undefined;
  }
  public set createDatabaseNatGatewayRoute(value: boolean | undefined) {
    this.inputs.create_database_nat_gateway_route = value;
  }
  public get createDatabaseSubnetGroup(): boolean | undefined {
    return this.inputs.create_database_subnet_group as boolean | undefined;
  }
  public set createDatabaseSubnetGroup(value: boolean | undefined) {
    this.inputs.create_database_subnet_group = value;
  }
  public get createDatabaseSubnetRouteTable(): boolean | undefined {
    return this.inputs.create_database_subnet_route_table as boolean | undefined;
  }
  public set createDatabaseSubnetRouteTable(value: boolean | undefined) {
    this.inputs.create_database_subnet_route_table = value;
  }
  public get createEgressOnlyIgw(): boolean | undefined {
    return this.inputs.create_egress_only_igw as boolean | undefined;
  }
  public set createEgressOnlyIgw(value: boolean | undefined) {
    this.inputs.create_egress_only_igw = value;
  }
  public get createElasticacheSubnetGroup(): boolean | undefined {
    return this.inputs.create_elasticache_subnet_group as boolean | undefined;
  }
  public set createElasticacheSubnetGroup(value: boolean | undefined) {
    this.inputs.create_elasticache_subnet_group = value;
  }
  public get createElasticacheSubnetRouteTable(): boolean | undefined {
    return this.inputs.create_elasticache_subnet_route_table as boolean | undefined;
  }
  public set createElasticacheSubnetRouteTable(value: boolean | undefined) {
    this.inputs.create_elasticache_subnet_route_table = value;
  }
  public get createFlowLogCloudwatchIamRole(): boolean | undefined {
    return this.inputs.create_flow_log_cloudwatch_iam_role as boolean | undefined;
  }
  public set createFlowLogCloudwatchIamRole(value: boolean | undefined) {
    this.inputs.create_flow_log_cloudwatch_iam_role = value;
  }
  public get createFlowLogCloudwatchLogGroup(): boolean | undefined {
    return this.inputs.create_flow_log_cloudwatch_log_group as boolean | undefined;
  }
  public set createFlowLogCloudwatchLogGroup(value: boolean | undefined) {
    this.inputs.create_flow_log_cloudwatch_log_group = value;
  }
  public get createIgw(): boolean | undefined {
    return this.inputs.create_igw as boolean | undefined;
  }
  public set createIgw(value: boolean | undefined) {
    this.inputs.create_igw = value;
  }
  public get createRedshiftSubnetGroup(): boolean | undefined {
    return this.inputs.create_redshift_subnet_group as boolean | undefined;
  }
  public set createRedshiftSubnetGroup(value: boolean | undefined) {
    this.inputs.create_redshift_subnet_group = value;
  }
  public get createRedshiftSubnetRouteTable(): boolean | undefined {
    return this.inputs.create_redshift_subnet_route_table as boolean | undefined;
  }
  public set createRedshiftSubnetRouteTable(value: boolean | undefined) {
    this.inputs.create_redshift_subnet_route_table = value;
  }
  public get createVpc(): boolean | undefined {
    return this.inputs.create_vpc as boolean | undefined;
  }
  public set createVpc(value: boolean | undefined) {
    this.inputs.create_vpc = value;
  }
  public get customerGatewayTags(): { [key: string]: string } | undefined {
    return this.inputs.customer_gateway_tags as { [key: string]: string } | undefined;
  }
  public set customerGatewayTags(value: { [key: string]: string } | undefined) {
    this.inputs.customer_gateway_tags = value;
  }
  public get customerGateways(): { [key: string]: { [key: string]: any } } | undefined {
    return this.inputs.customer_gateways as { [key: string]: { [key: string]: any } } | undefined;
  }
  public set customerGateways(value: { [key: string]: { [key: string]: any } } | undefined) {
    this.inputs.customer_gateways = value;
  }
  public get databaseAclTags(): { [key: string]: string } | undefined {
    return this.inputs.database_acl_tags as { [key: string]: string } | undefined;
  }
  public set databaseAclTags(value: { [key: string]: string } | undefined) {
    this.inputs.database_acl_tags = value;
  }
  public get databaseDedicatedNetworkAcl(): boolean | undefined {
    return this.inputs.database_dedicated_network_acl as boolean | undefined;
  }
  public set databaseDedicatedNetworkAcl(value: boolean | undefined) {
    this.inputs.database_dedicated_network_acl = value;
  }
  public get databaseInboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs.database_inbound_acl_rules as { [key: string]: string }[] | undefined;
  }
  public set databaseInboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs.database_inbound_acl_rules = value;
  }
  public get databaseOutboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs.database_outbound_acl_rules as { [key: string]: string }[] | undefined;
  }
  public set databaseOutboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs.database_outbound_acl_rules = value;
  }
  public get databaseRouteTableTags(): { [key: string]: string } | undefined {
    return this.inputs.database_route_table_tags as { [key: string]: string } | undefined;
  }
  public set databaseRouteTableTags(value: { [key: string]: string } | undefined) {
    this.inputs.database_route_table_tags = value;
  }
  public get databaseSubnetAssignIpv6AddressOnCreation(): boolean | undefined {
    return this.inputs.database_subnet_assign_ipv6_address_on_creation as boolean | undefined;
  }
  public set databaseSubnetAssignIpv6AddressOnCreation(value: boolean | undefined) {
    this.inputs.database_subnet_assign_ipv6_address_on_creation = value;
  }
  public get databaseSubnetGroupName(): string | undefined {
    return this.inputs.database_subnet_group_name as string | undefined;
  }
  public set databaseSubnetGroupName(value: string | undefined) {
    this.inputs.database_subnet_group_name = value;
  }
  public get databaseSubnetGroupTags(): { [key: string]: string } | undefined {
    return this.inputs.database_subnet_group_tags as { [key: string]: string } | undefined;
  }
  public set databaseSubnetGroupTags(value: { [key: string]: string } | undefined) {
    this.inputs.database_subnet_group_tags = value;
  }
  public get databaseSubnetIpv6Prefixes(): string[] | undefined {
    return this.inputs.database_subnet_ipv6_prefixes as string[] | undefined;
  }
  public set databaseSubnetIpv6Prefixes(value: string[] | undefined) {
    this.inputs.database_subnet_ipv6_prefixes = value;
  }
  public get databaseSubnetSuffix(): string | undefined {
    return this.inputs.database_subnet_suffix as string | undefined;
  }
  public set databaseSubnetSuffix(value: string | undefined) {
    this.inputs.database_subnet_suffix = value;
  }
  public get databaseSubnetTags(): { [key: string]: string } | undefined {
    return this.inputs.database_subnet_tags as { [key: string]: string } | undefined;
  }
  public set databaseSubnetTags(value: { [key: string]: string } | undefined) {
    this.inputs.database_subnet_tags = value;
  }
  public get databaseSubnets(): string[] | undefined {
    return this.inputs.database_subnets as string[] | undefined;
  }
  public set databaseSubnets(value: string[] | undefined) {
    this.inputs.database_subnets = value;
  }
  public get defaultNetworkAclEgress(): { [key: string]: string }[] | undefined {
    return this.inputs.default_network_acl_egress as { [key: string]: string }[] | undefined;
  }
  public set defaultNetworkAclEgress(value: { [key: string]: string }[] | undefined) {
    this.inputs.default_network_acl_egress = value;
  }
  public get defaultNetworkAclIngress(): { [key: string]: string }[] | undefined {
    return this.inputs.default_network_acl_ingress as { [key: string]: string }[] | undefined;
  }
  public set defaultNetworkAclIngress(value: { [key: string]: string }[] | undefined) {
    this.inputs.default_network_acl_ingress = value;
  }
  public get defaultNetworkAclName(): string | undefined {
    return this.inputs.default_network_acl_name as string | undefined;
  }
  public set defaultNetworkAclName(value: string | undefined) {
    this.inputs.default_network_acl_name = value;
  }
  public get defaultNetworkAclTags(): { [key: string]: string } | undefined {
    return this.inputs.default_network_acl_tags as { [key: string]: string } | undefined;
  }
  public set defaultNetworkAclTags(value: { [key: string]: string } | undefined) {
    this.inputs.default_network_acl_tags = value;
  }
  public get defaultRouteTablePropagatingVgws(): string[] | undefined {
    return this.inputs.default_route_table_propagating_vgws as string[] | undefined;
  }
  public set defaultRouteTablePropagatingVgws(value: string[] | undefined) {
    this.inputs.default_route_table_propagating_vgws = value;
  }
  public get defaultRouteTableRoutes(): { [key: string]: string }[] | undefined {
    return this.inputs.default_route_table_routes as { [key: string]: string }[] | undefined;
  }
  public set defaultRouteTableRoutes(value: { [key: string]: string }[] | undefined) {
    this.inputs.default_route_table_routes = value;
  }
  public get defaultRouteTableTags(): { [key: string]: string } | undefined {
    return this.inputs.default_route_table_tags as { [key: string]: string } | undefined;
  }
  public set defaultRouteTableTags(value: { [key: string]: string } | undefined) {
    this.inputs.default_route_table_tags = value;
  }
  public get defaultSecurityGroupEgress(): { [key: string]: string }[] | undefined {
    return this.inputs.default_security_group_egress as { [key: string]: string }[] | undefined;
  }
  public set defaultSecurityGroupEgress(value: { [key: string]: string }[] | undefined) {
    this.inputs.default_security_group_egress = value;
  }
  public get defaultSecurityGroupIngress(): { [key: string]: string }[] | undefined {
    return this.inputs.default_security_group_ingress as { [key: string]: string }[] | undefined;
  }
  public set defaultSecurityGroupIngress(value: { [key: string]: string }[] | undefined) {
    this.inputs.default_security_group_ingress = value;
  }
  public get defaultSecurityGroupName(): string | undefined {
    return this.inputs.default_security_group_name as string | undefined;
  }
  public set defaultSecurityGroupName(value: string | undefined) {
    this.inputs.default_security_group_name = value;
  }
  public get defaultSecurityGroupTags(): { [key: string]: string } | undefined {
    return this.inputs.default_security_group_tags as { [key: string]: string } | undefined;
  }
  public set defaultSecurityGroupTags(value: { [key: string]: string } | undefined) {
    this.inputs.default_security_group_tags = value;
  }
  public get defaultVpcEnableClassiclink(): boolean | undefined {
    return this.inputs.default_vpc_enable_classiclink as boolean | undefined;
  }
  public set defaultVpcEnableClassiclink(value: boolean | undefined) {
    this.inputs.default_vpc_enable_classiclink = value;
  }
  public get defaultVpcEnableDnsHostnames(): boolean | undefined {
    return this.inputs.default_vpc_enable_dns_hostnames as boolean | undefined;
  }
  public set defaultVpcEnableDnsHostnames(value: boolean | undefined) {
    this.inputs.default_vpc_enable_dns_hostnames = value;
  }
  public get defaultVpcEnableDnsSupport(): boolean | undefined {
    return this.inputs.default_vpc_enable_dns_support as boolean | undefined;
  }
  public set defaultVpcEnableDnsSupport(value: boolean | undefined) {
    this.inputs.default_vpc_enable_dns_support = value;
  }
  public get defaultVpcName(): string | undefined {
    return this.inputs.default_vpc_name as string | undefined;
  }
  public set defaultVpcName(value: string | undefined) {
    this.inputs.default_vpc_name = value;
  }
  public get defaultVpcTags(): { [key: string]: string } | undefined {
    return this.inputs.default_vpc_tags as { [key: string]: string } | undefined;
  }
  public set defaultVpcTags(value: { [key: string]: string } | undefined) {
    this.inputs.default_vpc_tags = value;
  }
  public get dhcpOptionsDomainName(): string | undefined {
    return this.inputs.dhcp_options_domain_name as string | undefined;
  }
  public set dhcpOptionsDomainName(value: string | undefined) {
    this.inputs.dhcp_options_domain_name = value;
  }
  public get dhcpOptionsDomainNameServers(): string[] | undefined {
    return this.inputs.dhcp_options_domain_name_servers as string[] | undefined;
  }
  public set dhcpOptionsDomainNameServers(value: string[] | undefined) {
    this.inputs.dhcp_options_domain_name_servers = value;
  }
  public get dhcpOptionsNetbiosNameServers(): string[] | undefined {
    return this.inputs.dhcp_options_netbios_name_servers as string[] | undefined;
  }
  public set dhcpOptionsNetbiosNameServers(value: string[] | undefined) {
    this.inputs.dhcp_options_netbios_name_servers = value;
  }
  public get dhcpOptionsNetbiosNodeType(): string | undefined {
    return this.inputs.dhcp_options_netbios_node_type as string | undefined;
  }
  public set dhcpOptionsNetbiosNodeType(value: string | undefined) {
    this.inputs.dhcp_options_netbios_node_type = value;
  }
  public get dhcpOptionsNtpServers(): string[] | undefined {
    return this.inputs.dhcp_options_ntp_servers as string[] | undefined;
  }
  public set dhcpOptionsNtpServers(value: string[] | undefined) {
    this.inputs.dhcp_options_ntp_servers = value;
  }
  public get dhcpOptionsTags(): { [key: string]: string } | undefined {
    return this.inputs.dhcp_options_tags as { [key: string]: string } | undefined;
  }
  public set dhcpOptionsTags(value: { [key: string]: string } | undefined) {
    this.inputs.dhcp_options_tags = value;
  }
  public get elasticacheAclTags(): { [key: string]: string } | undefined {
    return this.inputs.elasticache_acl_tags as { [key: string]: string } | undefined;
  }
  public set elasticacheAclTags(value: { [key: string]: string } | undefined) {
    this.inputs.elasticache_acl_tags = value;
  }
  public get elasticacheDedicatedNetworkAcl(): boolean | undefined {
    return this.inputs.elasticache_dedicated_network_acl as boolean | undefined;
  }
  public set elasticacheDedicatedNetworkAcl(value: boolean | undefined) {
    this.inputs.elasticache_dedicated_network_acl = value;
  }
  public get elasticacheInboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs.elasticache_inbound_acl_rules as { [key: string]: string }[] | undefined;
  }
  public set elasticacheInboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs.elasticache_inbound_acl_rules = value;
  }
  public get elasticacheOutboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs.elasticache_outbound_acl_rules as { [key: string]: string }[] | undefined;
  }
  public set elasticacheOutboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs.elasticache_outbound_acl_rules = value;
  }
  public get elasticacheRouteTableTags(): { [key: string]: string } | undefined {
    return this.inputs.elasticache_route_table_tags as { [key: string]: string } | undefined;
  }
  public set elasticacheRouteTableTags(value: { [key: string]: string } | undefined) {
    this.inputs.elasticache_route_table_tags = value;
  }
  public get elasticacheSubnetAssignIpv6AddressOnCreation(): boolean | undefined {
    return this.inputs.elasticache_subnet_assign_ipv6_address_on_creation as boolean | undefined;
  }
  public set elasticacheSubnetAssignIpv6AddressOnCreation(value: boolean | undefined) {
    this.inputs.elasticache_subnet_assign_ipv6_address_on_creation = value;
  }
  public get elasticacheSubnetGroupName(): string | undefined {
    return this.inputs.elasticache_subnet_group_name as string | undefined;
  }
  public set elasticacheSubnetGroupName(value: string | undefined) {
    this.inputs.elasticache_subnet_group_name = value;
  }
  public get elasticacheSubnetGroupTags(): { [key: string]: string } | undefined {
    return this.inputs.elasticache_subnet_group_tags as { [key: string]: string } | undefined;
  }
  public set elasticacheSubnetGroupTags(value: { [key: string]: string } | undefined) {
    this.inputs.elasticache_subnet_group_tags = value;
  }
  public get elasticacheSubnetIpv6Prefixes(): string[] | undefined {
    return this.inputs.elasticache_subnet_ipv6_prefixes as string[] | undefined;
  }
  public set elasticacheSubnetIpv6Prefixes(value: string[] | undefined) {
    this.inputs.elasticache_subnet_ipv6_prefixes = value;
  }
  public get elasticacheSubnetSuffix(): string | undefined {
    return this.inputs.elasticache_subnet_suffix as string | undefined;
  }
  public set elasticacheSubnetSuffix(value: string | undefined) {
    this.inputs.elasticache_subnet_suffix = value;
  }
  public get elasticacheSubnetTags(): { [key: string]: string } | undefined {
    return this.inputs.elasticache_subnet_tags as { [key: string]: string } | undefined;
  }
  public set elasticacheSubnetTags(value: { [key: string]: string } | undefined) {
    this.inputs.elasticache_subnet_tags = value;
  }
  public get elasticacheSubnets(): string[] | undefined {
    return this.inputs.elasticache_subnets as string[] | undefined;
  }
  public set elasticacheSubnets(value: string[] | undefined) {
    this.inputs.elasticache_subnets = value;
  }
  public get enableClassiclink(): boolean | undefined {
    return this.inputs.enable_classiclink as boolean | undefined;
  }
  public set enableClassiclink(value: boolean | undefined) {
    this.inputs.enable_classiclink = value;
  }
  public get enableClassiclinkDnsSupport(): boolean | undefined {
    return this.inputs.enable_classiclink_dns_support as boolean | undefined;
  }
  public set enableClassiclinkDnsSupport(value: boolean | undefined) {
    this.inputs.enable_classiclink_dns_support = value;
  }
  public get enableDhcpOptions(): boolean | undefined {
    return this.inputs.enable_dhcp_options as boolean | undefined;
  }
  public set enableDhcpOptions(value: boolean | undefined) {
    this.inputs.enable_dhcp_options = value;
  }
  public get enableDnsHostnames(): boolean | undefined {
    return this.inputs.enable_dns_hostnames as boolean | undefined;
  }
  public set enableDnsHostnames(value: boolean | undefined) {
    this.inputs.enable_dns_hostnames = value;
  }
  public get enableDnsSupport(): boolean | undefined {
    return this.inputs.enable_dns_support as boolean | undefined;
  }
  public set enableDnsSupport(value: boolean | undefined) {
    this.inputs.enable_dns_support = value;
  }
  public get enableFlowLog(): boolean | undefined {
    return this.inputs.enable_flow_log as boolean | undefined;
  }
  public set enableFlowLog(value: boolean | undefined) {
    this.inputs.enable_flow_log = value;
  }
  public get enableIpv6(): boolean | undefined {
    return this.inputs.enable_ipv6 as boolean | undefined;
  }
  public set enableIpv6(value: boolean | undefined) {
    this.inputs.enable_ipv6 = value;
  }
  public get enableNatGateway(): boolean | undefined {
    return this.inputs.enable_nat_gateway as boolean | undefined;
  }
  public set enableNatGateway(value: boolean | undefined) {
    this.inputs.enable_nat_gateway = value;
  }
  public get enablePublicRedshift(): boolean | undefined {
    return this.inputs.enable_public_redshift as boolean | undefined;
  }
  public set enablePublicRedshift(value: boolean | undefined) {
    this.inputs.enable_public_redshift = value;
  }
  public get enableVpnGateway(): boolean | undefined {
    return this.inputs.enable_vpn_gateway as boolean | undefined;
  }
  public set enableVpnGateway(value: boolean | undefined) {
    this.inputs.enable_vpn_gateway = value;
  }
  public get externalNatIpIds(): string[] | undefined {
    return this.inputs.external_nat_ip_ids as string[] | undefined;
  }
  public set externalNatIpIds(value: string[] | undefined) {
    this.inputs.external_nat_ip_ids = value;
  }
  public get externalNatIps(): string[] | undefined {
    return this.inputs.external_nat_ips as string[] | undefined;
  }
  public set externalNatIps(value: string[] | undefined) {
    this.inputs.external_nat_ips = value;
  }
  public get flowLogCloudwatchIamRoleArn(): string | undefined {
    return this.inputs.flow_log_cloudwatch_iam_role_arn as string | undefined;
  }
  public set flowLogCloudwatchIamRoleArn(value: string | undefined) {
    this.inputs.flow_log_cloudwatch_iam_role_arn = value;
  }
  public get flowLogCloudwatchLogGroupKmsKeyId(): string | undefined {
    return this.inputs.flow_log_cloudwatch_log_group_kms_key_id as string | undefined;
  }
  public set flowLogCloudwatchLogGroupKmsKeyId(value: string | undefined) {
    this.inputs.flow_log_cloudwatch_log_group_kms_key_id = value;
  }
  public get flowLogCloudwatchLogGroupNamePrefix(): string | undefined {
    return this.inputs.flow_log_cloudwatch_log_group_name_prefix as string | undefined;
  }
  public set flowLogCloudwatchLogGroupNamePrefix(value: string | undefined) {
    this.inputs.flow_log_cloudwatch_log_group_name_prefix = value;
  }
  public get flowLogCloudwatchLogGroupRetentionInDays(): number | undefined {
    return this.inputs.flow_log_cloudwatch_log_group_retention_in_days as number | undefined;
  }
  public set flowLogCloudwatchLogGroupRetentionInDays(value: number | undefined) {
    this.inputs.flow_log_cloudwatch_log_group_retention_in_days = value;
  }
  public get flowLogDestinationArn(): string | undefined {
    return this.inputs.flow_log_destination_arn as string | undefined;
  }
  public set flowLogDestinationArn(value: string | undefined) {
    this.inputs.flow_log_destination_arn = value;
  }
  public get flowLogDestinationType(): string | undefined {
    return this.inputs.flow_log_destination_type as string | undefined;
  }
  public set flowLogDestinationType(value: string | undefined) {
    this.inputs.flow_log_destination_type = value;
  }
  public get flowLogLogFormat(): string | undefined {
    return this.inputs.flow_log_log_format as string | undefined;
  }
  public set flowLogLogFormat(value: string | undefined) {
    this.inputs.flow_log_log_format = value;
  }
  public get flowLogMaxAggregationInterval(): number | undefined {
    return this.inputs.flow_log_max_aggregation_interval as number | undefined;
  }
  public set flowLogMaxAggregationInterval(value: number | undefined) {
    this.inputs.flow_log_max_aggregation_interval = value;
  }
  public get flowLogTrafficType(): string | undefined {
    return this.inputs.flow_log_traffic_type as string | undefined;
  }
  public set flowLogTrafficType(value: string | undefined) {
    this.inputs.flow_log_traffic_type = value;
  }
  public get igwTags(): { [key: string]: string } | undefined {
    return this.inputs.igw_tags as { [key: string]: string } | undefined;
  }
  public set igwTags(value: { [key: string]: string } | undefined) {
    this.inputs.igw_tags = value;
  }
  public get instanceTenancy(): string | undefined {
    return this.inputs.instance_tenancy as string | undefined;
  }
  public set instanceTenancy(value: string | undefined) {
    this.inputs.instance_tenancy = value;
  }
  public get intraAclTags(): { [key: string]: string } | undefined {
    return this.inputs.intra_acl_tags as { [key: string]: string } | undefined;
  }
  public set intraAclTags(value: { [key: string]: string } | undefined) {
    this.inputs.intra_acl_tags = value;
  }
  public get intraDedicatedNetworkAcl(): boolean | undefined {
    return this.inputs.intra_dedicated_network_acl as boolean | undefined;
  }
  public set intraDedicatedNetworkAcl(value: boolean | undefined) {
    this.inputs.intra_dedicated_network_acl = value;
  }
  public get intraInboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs.intra_inbound_acl_rules as { [key: string]: string }[] | undefined;
  }
  public set intraInboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs.intra_inbound_acl_rules = value;
  }
  public get intraOutboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs.intra_outbound_acl_rules as { [key: string]: string }[] | undefined;
  }
  public set intraOutboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs.intra_outbound_acl_rules = value;
  }
  public get intraRouteTableTags(): { [key: string]: string } | undefined {
    return this.inputs.intra_route_table_tags as { [key: string]: string } | undefined;
  }
  public set intraRouteTableTags(value: { [key: string]: string } | undefined) {
    this.inputs.intra_route_table_tags = value;
  }
  public get intraSubnetAssignIpv6AddressOnCreation(): boolean | undefined {
    return this.inputs.intra_subnet_assign_ipv6_address_on_creation as boolean | undefined;
  }
  public set intraSubnetAssignIpv6AddressOnCreation(value: boolean | undefined) {
    this.inputs.intra_subnet_assign_ipv6_address_on_creation = value;
  }
  public get intraSubnetIpv6Prefixes(): string[] | undefined {
    return this.inputs.intra_subnet_ipv6_prefixes as string[] | undefined;
  }
  public set intraSubnetIpv6Prefixes(value: string[] | undefined) {
    this.inputs.intra_subnet_ipv6_prefixes = value;
  }
  public get intraSubnetSuffix(): string | undefined {
    return this.inputs.intra_subnet_suffix as string | undefined;
  }
  public set intraSubnetSuffix(value: string | undefined) {
    this.inputs.intra_subnet_suffix = value;
  }
  public get intraSubnetTags(): { [key: string]: string } | undefined {
    return this.inputs.intra_subnet_tags as { [key: string]: string } | undefined;
  }
  public set intraSubnetTags(value: { [key: string]: string } | undefined) {
    this.inputs.intra_subnet_tags = value;
  }
  public get intraSubnets(): string[] | undefined {
    return this.inputs.intra_subnets as string[] | undefined;
  }
  public set intraSubnets(value: string[] | undefined) {
    this.inputs.intra_subnets = value;
  }
  public get manageDefaultNetworkAcl(): boolean | undefined {
    return this.inputs.manage_default_network_acl as boolean | undefined;
  }
  public set manageDefaultNetworkAcl(value: boolean | undefined) {
    this.inputs.manage_default_network_acl = value;
  }
  public get manageDefaultRouteTable(): boolean | undefined {
    return this.inputs.manage_default_route_table as boolean | undefined;
  }
  public set manageDefaultRouteTable(value: boolean | undefined) {
    this.inputs.manage_default_route_table = value;
  }
  public get manageDefaultSecurityGroup(): boolean | undefined {
    return this.inputs.manage_default_security_group as boolean | undefined;
  }
  public set manageDefaultSecurityGroup(value: boolean | undefined) {
    this.inputs.manage_default_security_group = value;
  }
  public get manageDefaultVpc(): boolean | undefined {
    return this.inputs.manage_default_vpc as boolean | undefined;
  }
  public set manageDefaultVpc(value: boolean | undefined) {
    this.inputs.manage_default_vpc = value;
  }
  public get mapPublicIpOnLaunch(): boolean | undefined {
    return this.inputs.map_public_ip_on_launch as boolean | undefined;
  }
  public set mapPublicIpOnLaunch(value: boolean | undefined) {
    this.inputs.map_public_ip_on_launch = value;
  }
  public get name(): string | undefined {
    return this.inputs.name as string | undefined;
  }
  public set name(value: string | undefined) {
    this.inputs.name = value;
  }
  public get natEipTags(): { [key: string]: string } | undefined {
    return this.inputs.nat_eip_tags as { [key: string]: string } | undefined;
  }
  public set natEipTags(value: { [key: string]: string } | undefined) {
    this.inputs.nat_eip_tags = value;
  }
  public get natGatewayTags(): { [key: string]: string } | undefined {
    return this.inputs.nat_gateway_tags as { [key: string]: string } | undefined;
  }
  public set natGatewayTags(value: { [key: string]: string } | undefined) {
    this.inputs.nat_gateway_tags = value;
  }
  public get oneNatGatewayPerAz(): boolean | undefined {
    return this.inputs.one_nat_gateway_per_az as boolean | undefined;
  }
  public set oneNatGatewayPerAz(value: boolean | undefined) {
    this.inputs.one_nat_gateway_per_az = value;
  }
  public get outpostAclTags(): { [key: string]: string } | undefined {
    return this.inputs.outpost_acl_tags as { [key: string]: string } | undefined;
  }
  public set outpostAclTags(value: { [key: string]: string } | undefined) {
    this.inputs.outpost_acl_tags = value;
  }
  public get outpostArn(): string | undefined {
    return this.inputs.outpost_arn as string | undefined;
  }
  public set outpostArn(value: string | undefined) {
    this.inputs.outpost_arn = value;
  }
  public get outpostAz(): string | undefined {
    return this.inputs.outpost_az as string | undefined;
  }
  public set outpostAz(value: string | undefined) {
    this.inputs.outpost_az = value;
  }
  public get outpostDedicatedNetworkAcl(): boolean | undefined {
    return this.inputs.outpost_dedicated_network_acl as boolean | undefined;
  }
  public set outpostDedicatedNetworkAcl(value: boolean | undefined) {
    this.inputs.outpost_dedicated_network_acl = value;
  }
  public get outpostInboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs.outpost_inbound_acl_rules as { [key: string]: string }[] | undefined;
  }
  public set outpostInboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs.outpost_inbound_acl_rules = value;
  }
  public get outpostOutboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs.outpost_outbound_acl_rules as { [key: string]: string }[] | undefined;
  }
  public set outpostOutboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs.outpost_outbound_acl_rules = value;
  }
  public get outpostSubnetAssignIpv6AddressOnCreation(): boolean | undefined {
    return this.inputs.outpost_subnet_assign_ipv6_address_on_creation as boolean | undefined;
  }
  public set outpostSubnetAssignIpv6AddressOnCreation(value: boolean | undefined) {
    this.inputs.outpost_subnet_assign_ipv6_address_on_creation = value;
  }
  public get outpostSubnetIpv6Prefixes(): string[] | undefined {
    return this.inputs.outpost_subnet_ipv6_prefixes as string[] | undefined;
  }
  public set outpostSubnetIpv6Prefixes(value: string[] | undefined) {
    this.inputs.outpost_subnet_ipv6_prefixes = value;
  }
  public get outpostSubnetSuffix(): string | undefined {
    return this.inputs.outpost_subnet_suffix as string | undefined;
  }
  public set outpostSubnetSuffix(value: string | undefined) {
    this.inputs.outpost_subnet_suffix = value;
  }
  public get outpostSubnetTags(): { [key: string]: string } | undefined {
    return this.inputs.outpost_subnet_tags as { [key: string]: string } | undefined;
  }
  public set outpostSubnetTags(value: { [key: string]: string } | undefined) {
    this.inputs.outpost_subnet_tags = value;
  }
  public get outpostSubnets(): string[] | undefined {
    return this.inputs.outpost_subnets as string[] | undefined;
  }
  public set outpostSubnets(value: string[] | undefined) {
    this.inputs.outpost_subnets = value;
  }
  public get privateAclTags(): { [key: string]: string } | undefined {
    return this.inputs.private_acl_tags as { [key: string]: string } | undefined;
  }
  public set privateAclTags(value: { [key: string]: string } | undefined) {
    this.inputs.private_acl_tags = value;
  }
  public get privateDedicatedNetworkAcl(): boolean | undefined {
    return this.inputs.private_dedicated_network_acl as boolean | undefined;
  }
  public set privateDedicatedNetworkAcl(value: boolean | undefined) {
    this.inputs.private_dedicated_network_acl = value;
  }
  public get privateInboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs.private_inbound_acl_rules as { [key: string]: string }[] | undefined;
  }
  public set privateInboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs.private_inbound_acl_rules = value;
  }
  public get privateOutboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs.private_outbound_acl_rules as { [key: string]: string }[] | undefined;
  }
  public set privateOutboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs.private_outbound_acl_rules = value;
  }
  public get privateRouteTableTags(): { [key: string]: string } | undefined {
    return this.inputs.private_route_table_tags as { [key: string]: string } | undefined;
  }
  public set privateRouteTableTags(value: { [key: string]: string } | undefined) {
    this.inputs.private_route_table_tags = value;
  }
  public get privateSubnetAssignIpv6AddressOnCreation(): boolean | undefined {
    return this.inputs.private_subnet_assign_ipv6_address_on_creation as boolean | undefined;
  }
  public set privateSubnetAssignIpv6AddressOnCreation(value: boolean | undefined) {
    this.inputs.private_subnet_assign_ipv6_address_on_creation = value;
  }
  public get privateSubnetIpv6Prefixes(): string[] | undefined {
    return this.inputs.private_subnet_ipv6_prefixes as string[] | undefined;
  }
  public set privateSubnetIpv6Prefixes(value: string[] | undefined) {
    this.inputs.private_subnet_ipv6_prefixes = value;
  }
  public get privateSubnetSuffix(): string | undefined {
    return this.inputs.private_subnet_suffix as string | undefined;
  }
  public set privateSubnetSuffix(value: string | undefined) {
    this.inputs.private_subnet_suffix = value;
  }
  public get privateSubnetTags(): { [key: string]: string } | undefined {
    return this.inputs.private_subnet_tags as { [key: string]: string } | undefined;
  }
  public set privateSubnetTags(value: { [key: string]: string } | undefined) {
    this.inputs.private_subnet_tags = value;
  }
  public get privateSubnets(): string[] | undefined {
    return this.inputs.private_subnets as string[] | undefined;
  }
  public set privateSubnets(value: string[] | undefined) {
    this.inputs.private_subnets = value;
  }
  public get propagateIntraRouteTablesVgw(): boolean | undefined {
    return this.inputs.propagate_intra_route_tables_vgw as boolean | undefined;
  }
  public set propagateIntraRouteTablesVgw(value: boolean | undefined) {
    this.inputs.propagate_intra_route_tables_vgw = value;
  }
  public get propagatePrivateRouteTablesVgw(): boolean | undefined {
    return this.inputs.propagate_private_route_tables_vgw as boolean | undefined;
  }
  public set propagatePrivateRouteTablesVgw(value: boolean | undefined) {
    this.inputs.propagate_private_route_tables_vgw = value;
  }
  public get propagatePublicRouteTablesVgw(): boolean | undefined {
    return this.inputs.propagate_public_route_tables_vgw as boolean | undefined;
  }
  public set propagatePublicRouteTablesVgw(value: boolean | undefined) {
    this.inputs.propagate_public_route_tables_vgw = value;
  }
  public get publicAclTags(): { [key: string]: string } | undefined {
    return this.inputs.public_acl_tags as { [key: string]: string } | undefined;
  }
  public set publicAclTags(value: { [key: string]: string } | undefined) {
    this.inputs.public_acl_tags = value;
  }
  public get publicDedicatedNetworkAcl(): boolean | undefined {
    return this.inputs.public_dedicated_network_acl as boolean | undefined;
  }
  public set publicDedicatedNetworkAcl(value: boolean | undefined) {
    this.inputs.public_dedicated_network_acl = value;
  }
  public get publicInboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs.public_inbound_acl_rules as { [key: string]: string }[] | undefined;
  }
  public set publicInboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs.public_inbound_acl_rules = value;
  }
  public get publicOutboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs.public_outbound_acl_rules as { [key: string]: string }[] | undefined;
  }
  public set publicOutboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs.public_outbound_acl_rules = value;
  }
  public get publicRouteTableTags(): { [key: string]: string } | undefined {
    return this.inputs.public_route_table_tags as { [key: string]: string } | undefined;
  }
  public set publicRouteTableTags(value: { [key: string]: string } | undefined) {
    this.inputs.public_route_table_tags = value;
  }
  public get publicSubnetAssignIpv6AddressOnCreation(): boolean | undefined {
    return this.inputs.public_subnet_assign_ipv6_address_on_creation as boolean | undefined;
  }
  public set publicSubnetAssignIpv6AddressOnCreation(value: boolean | undefined) {
    this.inputs.public_subnet_assign_ipv6_address_on_creation = value;
  }
  public get publicSubnetIpv6Prefixes(): string[] | undefined {
    return this.inputs.public_subnet_ipv6_prefixes as string[] | undefined;
  }
  public set publicSubnetIpv6Prefixes(value: string[] | undefined) {
    this.inputs.public_subnet_ipv6_prefixes = value;
  }
  public get publicSubnetSuffix(): string | undefined {
    return this.inputs.public_subnet_suffix as string | undefined;
  }
  public set publicSubnetSuffix(value: string | undefined) {
    this.inputs.public_subnet_suffix = value;
  }
  public get publicSubnetTags(): { [key: string]: string } | undefined {
    return this.inputs.public_subnet_tags as { [key: string]: string } | undefined;
  }
  public set publicSubnetTags(value: { [key: string]: string } | undefined) {
    this.inputs.public_subnet_tags = value;
  }
  public get publicSubnets(): string[] | undefined {
    return this.inputs.public_subnets as string[] | undefined;
  }
  public set publicSubnets(value: string[] | undefined) {
    this.inputs.public_subnets = value;
  }
  public get redshiftAclTags(): { [key: string]: string } | undefined {
    return this.inputs.redshift_acl_tags as { [key: string]: string } | undefined;
  }
  public set redshiftAclTags(value: { [key: string]: string } | undefined) {
    this.inputs.redshift_acl_tags = value;
  }
  public get redshiftDedicatedNetworkAcl(): boolean | undefined {
    return this.inputs.redshift_dedicated_network_acl as boolean | undefined;
  }
  public set redshiftDedicatedNetworkAcl(value: boolean | undefined) {
    this.inputs.redshift_dedicated_network_acl = value;
  }
  public get redshiftInboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs.redshift_inbound_acl_rules as { [key: string]: string }[] | undefined;
  }
  public set redshiftInboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs.redshift_inbound_acl_rules = value;
  }
  public get redshiftOutboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs.redshift_outbound_acl_rules as { [key: string]: string }[] | undefined;
  }
  public set redshiftOutboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs.redshift_outbound_acl_rules = value;
  }
  public get redshiftRouteTableTags(): { [key: string]: string } | undefined {
    return this.inputs.redshift_route_table_tags as { [key: string]: string } | undefined;
  }
  public set redshiftRouteTableTags(value: { [key: string]: string } | undefined) {
    this.inputs.redshift_route_table_tags = value;
  }
  public get redshiftSubnetAssignIpv6AddressOnCreation(): boolean | undefined {
    return this.inputs.redshift_subnet_assign_ipv6_address_on_creation as boolean | undefined;
  }
  public set redshiftSubnetAssignIpv6AddressOnCreation(value: boolean | undefined) {
    this.inputs.redshift_subnet_assign_ipv6_address_on_creation = value;
  }
  public get redshiftSubnetGroupName(): string | undefined {
    return this.inputs.redshift_subnet_group_name as string | undefined;
  }
  public set redshiftSubnetGroupName(value: string | undefined) {
    this.inputs.redshift_subnet_group_name = value;
  }
  public get redshiftSubnetGroupTags(): { [key: string]: string } | undefined {
    return this.inputs.redshift_subnet_group_tags as { [key: string]: string } | undefined;
  }
  public set redshiftSubnetGroupTags(value: { [key: string]: string } | undefined) {
    this.inputs.redshift_subnet_group_tags = value;
  }
  public get redshiftSubnetIpv6Prefixes(): string[] | undefined {
    return this.inputs.redshift_subnet_ipv6_prefixes as string[] | undefined;
  }
  public set redshiftSubnetIpv6Prefixes(value: string[] | undefined) {
    this.inputs.redshift_subnet_ipv6_prefixes = value;
  }
  public get redshiftSubnetSuffix(): string | undefined {
    return this.inputs.redshift_subnet_suffix as string | undefined;
  }
  public set redshiftSubnetSuffix(value: string | undefined) {
    this.inputs.redshift_subnet_suffix = value;
  }
  public get redshiftSubnetTags(): { [key: string]: string } | undefined {
    return this.inputs.redshift_subnet_tags as { [key: string]: string } | undefined;
  }
  public set redshiftSubnetTags(value: { [key: string]: string } | undefined) {
    this.inputs.redshift_subnet_tags = value;
  }
  public get redshiftSubnets(): string[] | undefined {
    return this.inputs.redshift_subnets as string[] | undefined;
  }
  public set redshiftSubnets(value: string[] | undefined) {
    this.inputs.redshift_subnets = value;
  }
  public get reuseNatIps(): boolean | undefined {
    return this.inputs.reuse_nat_ips as boolean | undefined;
  }
  public set reuseNatIps(value: boolean | undefined) {
    this.inputs.reuse_nat_ips = value;
  }
  public get secondaryCidrBlocks(): string[] | undefined {
    return this.inputs.secondary_cidr_blocks as string[] | undefined;
  }
  public set secondaryCidrBlocks(value: string[] | undefined) {
    this.inputs.secondary_cidr_blocks = value;
  }
  public get singleNatGateway(): boolean | undefined {
    return this.inputs.single_nat_gateway as boolean | undefined;
  }
  public set singleNatGateway(value: boolean | undefined) {
    this.inputs.single_nat_gateway = value;
  }
  public get tags(): { [key: string]: string } | undefined {
    return this.inputs.tags as { [key: string]: string } | undefined;
  }
  public set tags(value: { [key: string]: string } | undefined) {
    this.inputs.tags = value;
  }
  public get vpcFlowLogPermissionsBoundary(): string | undefined {
    return this.inputs.vpc_flow_log_permissions_boundary as string | undefined;
  }
  public set vpcFlowLogPermissionsBoundary(value: string | undefined) {
    this.inputs.vpc_flow_log_permissions_boundary = value;
  }
  public get vpcFlowLogTags(): { [key: string]: string } | undefined {
    return this.inputs.vpc_flow_log_tags as { [key: string]: string } | undefined;
  }
  public set vpcFlowLogTags(value: { [key: string]: string } | undefined) {
    this.inputs.vpc_flow_log_tags = value;
  }
  public get vpcTags(): { [key: string]: string } | undefined {
    return this.inputs.vpc_tags as { [key: string]: string } | undefined;
  }
  public set vpcTags(value: { [key: string]: string } | undefined) {
    this.inputs.vpc_tags = value;
  }
  public get vpnGatewayAz(): string | undefined {
    return this.inputs.vpn_gateway_az as string | undefined;
  }
  public set vpnGatewayAz(value: string | undefined) {
    this.inputs.vpn_gateway_az = value;
  }
  public get vpnGatewayId(): string | undefined {
    return this.inputs.vpn_gateway_id as string | undefined;
  }
  public set vpnGatewayId(value: string | undefined) {
    this.inputs.vpn_gateway_id = value;
  }
  public get vpnGatewayTags(): { [key: string]: string } | undefined {
    return this.inputs.vpn_gateway_tags as { [key: string]: string } | undefined;
  }
  public set vpnGatewayTags(value: { [key: string]: string } | undefined) {
    this.inputs.vpn_gateway_tags = value;
  }
  public get azsOutput(): string {
    return this.interpolationForOutput('azs');
  }
  public get cgwArnsOutput(): string {
    return this.interpolationForOutput('cgw_arns');
  }
  public get cgwIdsOutput(): string {
    return this.interpolationForOutput('cgw_ids');
  }
  public get databaseInternetGatewayRouteIdOutput(): string {
    return this.interpolationForOutput('database_internet_gateway_route_id');
  }
  public get databaseIpv6EgressRouteIdOutput(): string {
    return this.interpolationForOutput('database_ipv6_egress_route_id');
  }
  public get databaseNatGatewayRouteIdsOutput(): string {
    return this.interpolationForOutput('database_nat_gateway_route_ids');
  }
  public get databaseNetworkAclArnOutput(): string {
    return this.interpolationForOutput('database_network_acl_arn');
  }
  public get databaseNetworkAclIdOutput(): string {
    return this.interpolationForOutput('database_network_acl_id');
  }
  public get databaseRouteTableAssociationIdsOutput(): string {
    return this.interpolationForOutput('database_route_table_association_ids');
  }
  public get databaseRouteTableIdsOutput(): string {
    return this.interpolationForOutput('database_route_table_ids');
  }
  public get databaseSubnetArnsOutput(): string {
    return this.interpolationForOutput('database_subnet_arns');
  }
  public get databaseSubnetGroupOutput(): string {
    return this.interpolationForOutput('database_subnet_group');
  }
  public get databaseSubnetGroupNameOutput(): string {
    return this.interpolationForOutput('database_subnet_group_name');
  }
  public get databaseSubnetsOutput(): string {
    return this.interpolationForOutput('database_subnets');
  }
  public get databaseSubnetsCidrBlocksOutput(): string {
    return this.interpolationForOutput('database_subnets_cidr_blocks');
  }
  public get databaseSubnetsIpv6CidrBlocksOutput(): string {
    return this.interpolationForOutput('database_subnets_ipv6_cidr_blocks');
  }
  public get defaultNetworkAclIdOutput(): string {
    return this.interpolationForOutput('default_network_acl_id');
  }
  public get defaultRouteTableIdOutput(): string {
    return this.interpolationForOutput('default_route_table_id');
  }
  public get defaultSecurityGroupIdOutput(): string {
    return this.interpolationForOutput('default_security_group_id');
  }
  public get defaultVpcArnOutput(): string {
    return this.interpolationForOutput('default_vpc_arn');
  }
  public get defaultVpcCidrBlockOutput(): string {
    return this.interpolationForOutput('default_vpc_cidr_block');
  }
  public get defaultVpcDefaultNetworkAclIdOutput(): string {
    return this.interpolationForOutput('default_vpc_default_network_acl_id');
  }
  public get defaultVpcDefaultRouteTableIdOutput(): string {
    return this.interpolationForOutput('default_vpc_default_route_table_id');
  }
  public get defaultVpcDefaultSecurityGroupIdOutput(): string {
    return this.interpolationForOutput('default_vpc_default_security_group_id');
  }
  public get defaultVpcEnableDnsHostnamesOutput(): string {
    return this.interpolationForOutput('default_vpc_enable_dns_hostnames');
  }
  public get defaultVpcEnableDnsSupportOutput(): string {
    return this.interpolationForOutput('default_vpc_enable_dns_support');
  }
  public get defaultVpcIdOutput(): string {
    return this.interpolationForOutput('default_vpc_id');
  }
  public get defaultVpcInstanceTenancyOutput(): string {
    return this.interpolationForOutput('default_vpc_instance_tenancy');
  }
  public get defaultVpcMainRouteTableIdOutput(): string {
    return this.interpolationForOutput('default_vpc_main_route_table_id');
  }
  public get dhcpOptionsIdOutput(): string {
    return this.interpolationForOutput('dhcp_options_id');
  }
  public get egressOnlyInternetGatewayIdOutput(): string {
    return this.interpolationForOutput('egress_only_internet_gateway_id');
  }
  public get elasticacheNetworkAclArnOutput(): string {
    return this.interpolationForOutput('elasticache_network_acl_arn');
  }
  public get elasticacheNetworkAclIdOutput(): string {
    return this.interpolationForOutput('elasticache_network_acl_id');
  }
  public get elasticacheRouteTableAssociationIdsOutput(): string {
    return this.interpolationForOutput('elasticache_route_table_association_ids');
  }
  public get elasticacheRouteTableIdsOutput(): string {
    return this.interpolationForOutput('elasticache_route_table_ids');
  }
  public get elasticacheSubnetArnsOutput(): string {
    return this.interpolationForOutput('elasticache_subnet_arns');
  }
  public get elasticacheSubnetGroupOutput(): string {
    return this.interpolationForOutput('elasticache_subnet_group');
  }
  public get elasticacheSubnetGroupNameOutput(): string {
    return this.interpolationForOutput('elasticache_subnet_group_name');
  }
  public get elasticacheSubnetsOutput(): string {
    return this.interpolationForOutput('elasticache_subnets');
  }
  public get elasticacheSubnetsCidrBlocksOutput(): string {
    return this.interpolationForOutput('elasticache_subnets_cidr_blocks');
  }
  public get elasticacheSubnetsIpv6CidrBlocksOutput(): string {
    return this.interpolationForOutput('elasticache_subnets_ipv6_cidr_blocks');
  }
  public get igwArnOutput(): string {
    return this.interpolationForOutput('igw_arn');
  }
  public get igwIdOutput(): string {
    return this.interpolationForOutput('igw_id');
  }
  public get intraNetworkAclArnOutput(): string {
    return this.interpolationForOutput('intra_network_acl_arn');
  }
  public get intraNetworkAclIdOutput(): string {
    return this.interpolationForOutput('intra_network_acl_id');
  }
  public get intraRouteTableAssociationIdsOutput(): string {
    return this.interpolationForOutput('intra_route_table_association_ids');
  }
  public get intraRouteTableIdsOutput(): string {
    return this.interpolationForOutput('intra_route_table_ids');
  }
  public get intraSubnetArnsOutput(): string {
    return this.interpolationForOutput('intra_subnet_arns');
  }
  public get intraSubnetsOutput(): string {
    return this.interpolationForOutput('intra_subnets');
  }
  public get intraSubnetsCidrBlocksOutput(): string {
    return this.interpolationForOutput('intra_subnets_cidr_blocks');
  }
  public get intraSubnetsIpv6CidrBlocksOutput(): string {
    return this.interpolationForOutput('intra_subnets_ipv6_cidr_blocks');
  }
  public get nameOutput(): string {
    return this.interpolationForOutput('name');
  }
  public get natIdsOutput(): string {
    return this.interpolationForOutput('nat_ids');
  }
  public get natPublicIpsOutput(): string {
    return this.interpolationForOutput('nat_public_ips');
  }
  public get natgwIdsOutput(): string {
    return this.interpolationForOutput('natgw_ids');
  }
  public get outpostNetworkAclArnOutput(): string {
    return this.interpolationForOutput('outpost_network_acl_arn');
  }
  public get outpostNetworkAclIdOutput(): string {
    return this.interpolationForOutput('outpost_network_acl_id');
  }
  public get outpostSubnetArnsOutput(): string {
    return this.interpolationForOutput('outpost_subnet_arns');
  }
  public get outpostSubnetsOutput(): string {
    return this.interpolationForOutput('outpost_subnets');
  }
  public get outpostSubnetsCidrBlocksOutput(): string {
    return this.interpolationForOutput('outpost_subnets_cidr_blocks');
  }
  public get outpostSubnetsIpv6CidrBlocksOutput(): string {
    return this.interpolationForOutput('outpost_subnets_ipv6_cidr_blocks');
  }
  public get privateIpv6EgressRouteIdsOutput(): string {
    return this.interpolationForOutput('private_ipv6_egress_route_ids');
  }
  public get privateNatGatewayRouteIdsOutput(): string {
    return this.interpolationForOutput('private_nat_gateway_route_ids');
  }
  public get privateNetworkAclArnOutput(): string {
    return this.interpolationForOutput('private_network_acl_arn');
  }
  public get privateNetworkAclIdOutput(): string {
    return this.interpolationForOutput('private_network_acl_id');
  }
  public get privateRouteTableAssociationIdsOutput(): string {
    return this.interpolationForOutput('private_route_table_association_ids');
  }
  public get privateRouteTableIdsOutput(): string {
    return this.interpolationForOutput('private_route_table_ids');
  }
  public get privateSubnetArnsOutput(): string {
    return this.interpolationForOutput('private_subnet_arns');
  }
  public get privateSubnetsOutput(): string {
    return this.interpolationForOutput('private_subnets');
  }
  public get privateSubnetsCidrBlocksOutput(): string {
    return this.interpolationForOutput('private_subnets_cidr_blocks');
  }
  public get privateSubnetsIpv6CidrBlocksOutput(): string {
    return this.interpolationForOutput('private_subnets_ipv6_cidr_blocks');
  }
  public get publicInternetGatewayIpv6RouteIdOutput(): string {
    return this.interpolationForOutput('public_internet_gateway_ipv6_route_id');
  }
  public get publicInternetGatewayRouteIdOutput(): string {
    return this.interpolationForOutput('public_internet_gateway_route_id');
  }
  public get publicNetworkAclArnOutput(): string {
    return this.interpolationForOutput('public_network_acl_arn');
  }
  public get publicNetworkAclIdOutput(): string {
    return this.interpolationForOutput('public_network_acl_id');
  }
  public get publicRouteTableAssociationIdsOutput(): string {
    return this.interpolationForOutput('public_route_table_association_ids');
  }
  public get publicRouteTableIdsOutput(): string {
    return this.interpolationForOutput('public_route_table_ids');
  }
  public get publicSubnetArnsOutput(): string {
    return this.interpolationForOutput('public_subnet_arns');
  }
  public get publicSubnetsOutput(): string {
    return this.interpolationForOutput('public_subnets');
  }
  public get publicSubnetsCidrBlocksOutput(): string {
    return this.interpolationForOutput('public_subnets_cidr_blocks');
  }
  public get publicSubnetsIpv6CidrBlocksOutput(): string {
    return this.interpolationForOutput('public_subnets_ipv6_cidr_blocks');
  }
  public get redshiftNetworkAclArnOutput(): string {
    return this.interpolationForOutput('redshift_network_acl_arn');
  }
  public get redshiftNetworkAclIdOutput(): string {
    return this.interpolationForOutput('redshift_network_acl_id');
  }
  public get redshiftPublicRouteTableAssociationIdsOutput(): string {
    return this.interpolationForOutput('redshift_public_route_table_association_ids');
  }
  public get redshiftRouteTableAssociationIdsOutput(): string {
    return this.interpolationForOutput('redshift_route_table_association_ids');
  }
  public get redshiftRouteTableIdsOutput(): string {
    return this.interpolationForOutput('redshift_route_table_ids');
  }
  public get redshiftSubnetArnsOutput(): string {
    return this.interpolationForOutput('redshift_subnet_arns');
  }
  public get redshiftSubnetGroupOutput(): string {
    return this.interpolationForOutput('redshift_subnet_group');
  }
  public get redshiftSubnetsOutput(): string {
    return this.interpolationForOutput('redshift_subnets');
  }
  public get redshiftSubnetsCidrBlocksOutput(): string {
    return this.interpolationForOutput('redshift_subnets_cidr_blocks');
  }
  public get redshiftSubnetsIpv6CidrBlocksOutput(): string {
    return this.interpolationForOutput('redshift_subnets_ipv6_cidr_blocks');
  }
  public get thisCustomerGatewayOutput(): string {
    return this.interpolationForOutput('this_customer_gateway');
  }
  public get vgwArnOutput(): string {
    return this.interpolationForOutput('vgw_arn');
  }
  public get vgwIdOutput(): string {
    return this.interpolationForOutput('vgw_id');
  }
  public get vpcArnOutput(): string {
    return this.interpolationForOutput('vpc_arn');
  }
  public get vpcCidrBlockOutput(): string {
    return this.interpolationForOutput('vpc_cidr_block');
  }
  public get vpcEnableDnsHostnamesOutput(): string {
    return this.interpolationForOutput('vpc_enable_dns_hostnames');
  }
  public get vpcEnableDnsSupportOutput(): string {
    return this.interpolationForOutput('vpc_enable_dns_support');
  }
  public get vpcFlowLogCloudwatchIamRoleArnOutput(): string {
    return this.interpolationForOutput('vpc_flow_log_cloudwatch_iam_role_arn');
  }
  public get vpcFlowLogDestinationArnOutput(): string {
    return this.interpolationForOutput('vpc_flow_log_destination_arn');
  }
  public get vpcFlowLogDestinationTypeOutput(): string {
    return this.interpolationForOutput('vpc_flow_log_destination_type');
  }
  public get vpcFlowLogIdOutput(): string {
    return this.interpolationForOutput('vpc_flow_log_id');
  }
  public get vpcIdOutput(): string {
    return this.interpolationForOutput('vpc_id');
  }
  public get vpcInstanceTenancyOutput(): string {
    return this.interpolationForOutput('vpc_instance_tenancy');
  }
  public get vpcIpv6AssociationIdOutput(): string {
    return this.interpolationForOutput('vpc_ipv6_association_id');
  }
  public get vpcIpv6CidrBlockOutput(): string {
    return this.interpolationForOutput('vpc_ipv6_cidr_block');
  }
  public get vpcMainRouteTableIdOutput(): string {
    return this.interpolationForOutput('vpc_main_route_table_id');
  }
  public get vpcOwnerIdOutput(): string {
    return this.interpolationForOutput('vpc_owner_id');
  }
  public get vpcSecondaryCidrBlocksOutput(): string {
    return this.interpolationForOutput('vpc_secondary_cidr_blocks');
  }
  protected synthesizeAttributes() {
    return this.inputs;
  }
}
